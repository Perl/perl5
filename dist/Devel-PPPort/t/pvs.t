################################################################################
#
#            !!!!!   Do NOT edit this file directly!   !!!!!
#
#            Edit mktests.PL and/or parts/inc/pvs instead.
#
#  This file was automatically generated from the definition files in the
#  parts/inc/ subdirectory by mktests.PL. To learn more about how all this
#  works, please read the F<HACKERS> file that came with this distribution.
#
################################################################################

use FindBin ();

BEGIN {
  if ($ENV{'PERL_CORE'}) {
    chdir 't' if -d 't';
    unshift @INC, '../lib' if -d '../lib' && -d '../ext';
    require Config; Config->import;
    use vars '%Config';
    if (" $Config{'extensions'} " !~ m[ Devel/PPPort ]) {
      print "1..0 # Skip -- Perl configured without Devel::PPPort module\n";
      exit 0;
    }
  }

  use lib "$FindBin::Bin";
  use lib "$FindBin::Bin/../parts/inc";

  die qq[Cannot find "$FindBin::Bin/../parts/inc"] unless -d "$FindBin::Bin/../parts/inc";

  sub load {
    require 'testutil.pl';
    require 'inctools';
  }

  if (12) {
    load();
    plan(tests => 12);
  }
}

use Devel::PPPort;
use strict;
BEGIN { $^W = 1; }

package Devel::PPPort;
use vars '@ISA';
require DynaLoader;
@ISA = qw(DynaLoader);
Devel::PPPort->bootstrap;

package main;

my $x = 'foo';

is(Devel::PPPort::newSVpvs(), "newSVpvs");
is(Devel::PPPort::newSVpvs_flags(), "newSVpvs_flags");
is(Devel::PPPort::newSVpvs_share(), 3);

Devel::PPPort::sv_catpvs($x);
is($x, "foosv_catpvs");

Devel::PPPort::sv_setpvs($x);
is($x, "sv_setpvs");

my %h = ('hv_fetchs' => 42);
Devel::PPPort::hv_stores(\%h, 4711);
is(scalar keys %h, 2);
ok(exists $h{'hv_stores'});
is($h{'hv_stores'}, 4711);
is(Devel::PPPort::hv_fetchs(\%h), 42);
is(Devel::PPPort::gv_fetchpvs(), \*Devel::PPPort::VERSION);
is(Devel::PPPort::gv_stashpvs(), \%Devel::PPPort::);

is(Devel::PPPort::get_cvs(), 3);


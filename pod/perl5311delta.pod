=encoding utf8

=head1 NAME

perl5311delta - what is new for perl v5.31.1

=head1 DESCRIPTION

This document describes differences between the 5.31.0 release and the 5.31.1
release.

If you are upgrading from an earlier release such as 5.30.0, first read
L<perl5310delta>, which describes differences between 5.30.0 and 5.31.0.

=head1 Incompatible Changes

=head2 Use of L<C<vec>|perlfunc/vec EXPR,OFFSET,BITS> on strings with code points above 0xFF is forbidden

Such strings are represented internally in UTF-8, and C<vec> is a
bit-oriented operation that will likely give unexpected results on those
strings.  This was deprecated in perl 5.28.0.

=head2 Use of code points over 0xFF in string bitwise operators

Some uses of these were already illegal after a previous deprecation
cycle.  The remaining uses are now prohibited, having been deprecated in perl
5.28.0.  See L<perldeprecation>.

=head2 C<Sys::Hostname::hostname()> does not accept arguments

This usage was deprecated in perl 5.28.0 and is now fatal.

=head1 Modules and Pragmata

=head2 Updated Modules and Pragmata

=over 4

=item *

L<Class::Struct> has been upgraded from version 0.65 to 0.66.

=item *

L<Compress::Raw::Bzip2> has been upgraded from version 2.084 to 2.086.

=item *

L<Compress::Raw::Zlib> has been upgraded from version 2.084 to 2.086.

=item *

L<CPAN> has been upgraded from version 2.22 to 2.27.

=item *

L<DB_File> has been upgraded from version 1.843 to 1.852.

=item *

L<Devel::PPPort> has been upgraded from version 3.52 to 3.53.

=item *

L<ExtUtils::CBuilder> has been upgraded from version 0.280231 to 0.280232.

=item *

L<ExtUtils::MakeMaker> has been upgraded from version 7.34 to 7.36.

=item *

L<I18N::LangTags> has been upgraded from version 0.43 to 0.44.

=item *

L<IO> has been upgraded from version 1.40 to 1.41.

The supplied I<TO> is now always honoured on calls to the send()
method.  L<[perl #133936]|https://rt.perl.org/Ticket/Display.html?id=133936>

=item *

L<IO::Compress> has been upgraded from version 2.084 to 2.086.

=item *

L<Module::CoreList> has been upgraded from version 5.20190524 to 5.20190620.

=item *

L<overload> has been upgraded from version 1.30 to 1.31.

=item *

L<Pod::Simple> has been upgraded from version 3.36 to 3.38.

=item *

L<podlators> has been upgraded from version 4.11 to 4.12.

=item *

L<POSIX> has been upgraded from version 1.88 to 1.89.

=item *

L<SelfLoader> has been upgraded from version 1.25 to 1.26.

=item *

L<Storable> has been upgraded from version 3.15 to 3.16.

Regular expressions objects weren't properly counted for object id
purposes on retrieve.  This would corrupt the resulting structure, or
cause a runtime error in some cases.  L<[perl #134179]|https://rt.perl.org/Ticket/Display.html?id=134179>

=item *

L<Sys::Hostname> has been upgraded from version 1.22 to 1.23.

=item *

L<Test::Simple> has been upgraded from version 1.302162 to 1.302164.

=item *

L<Tie::File> has been upgraded from version 1.02 to 1.03.

=item *

L<Tie::Hash::NamedCapture> has been upgraded from version 0.10 to 0.11.

=item *

L<Time::HiRes> has been upgraded from version 1.9760 to 1.9761.

=item *

L<Unicode::Normalize> has been upgraded from version 1.26 to 1.27.

=item *

L<Unicode::UCD> has been upgraded from version 0.72 to 0.73.

=item *

L<warnings> has been upgraded from version 1.44 to 1.45.

=item *

L<XS::APItest> has been upgraded from version 1.00 to 1.01.

=back

=head2 Removed Modules and Pragmata

=over 4

=item *

Pod::Parser has been removed from the core distribution.
It still is available for download from CPAN.  This resolves L<[perl
#119439]|https://rt.perl.org/Ticket/Display.html?id=119439>.

=back

=head1 Documentation

=head2 Changes to Existing Documentation

We have attempted to update the documentation to reflect the changes
listed in this document.  If you find any we have missed, send email
to L<perlbug@perl.org|mailto:perlbug@perl.org>.

Additionally, the following selected changes have been made:

=head3 L<perlguts>

=over 4

=item *

Documentation about embed.fnc flags has been removed. F<embed.fnc> now has
sufficient comments within it.  Anyone changing that file will see those
comments first, so entries here are now redundant.

=back

=head3 L<perlpod>

=over 4

=item *

Advice has been added regarding the usage of C<< ZE<lt>E<gt> >>.

=back

=head1 Configuration and Compilation

=over 4

=item *

F<autodoc.pl>

This tool that regenerates L<perlintern> and L<perlapi> has been overhauled
significantly, restoring consistency in flags used in F<embed.fnc> and
L<Devel::PPPort> and allowing removal of many redundant C<=for apidoc>
entries in code.

=back

=head1 Platform Support

=head2 Discontinued Platforms

=over 4

=item Windows CE

Support for building perl on Windows CE has now been removed.

=back

=head1 Internal Changes

=over 4

=item *

L<eval_pv()|perlapi/eval_pv> no longer stringifies the exception when
C<croak_on_error> is true.  L<[perl #134175]|https://rt.perl.org/Ticket/Display.html?id=134175>

=back

=head1 Selected Bug Fixes

=over 4

=item *

Setting C<$)> now properly sets supplementary group ids if you have
the necessary privileges.  L<[perl #134169]|https://rt.perl.org/Ticket/Display.html?id=134169>

=item *

close() on a pipe now preemptively clears the PerlIO object from the
IO SV.  This prevents a second attempt to close the already closed
PerlIO object if a signal handler calls die() or exit() while close()
is waiting for the child process to complete.  L<[perl #122112]|https://rt.perl.org/Ticket/Display.html?id=122112>

=item *

C<< sprintf("%.*a", -10000, $x) >> would cause a buffer overflow due
to mishandling of the negative precision value.  L<[perl #134008]|https://rt.perl.org/Ticket/Display.html?id=134008>

=item *

scalar() on a reference could cause an erroneous assertion failure
during compilation.  L<[perl #134045]|https://rt.perl.org/Ticket/Display.html?id=134045>

=item *

C<%{^CAPTURE_ALL}> is now an alias to C<%-> as documented, rather than
incorrectly an alias for C<%+>.  L<[perl #131867]|https://rt.perl.org/Ticket/Display.html?id=131867>

=item *

C<%{^CAPTURE}> didn't work if C<@{^CAPTURE}> was mentioned first.
Similarly for C<%{^CAPTURE_ALL}> and C<@{^CAPTURE_ALL}>, though
C<@{^CAPTURE_ALL}> currently isn't used.  L<[perl #131193]|https://rt.perl.org/Ticket/Display.html?id=131193>

=item *

Extraordinarily large (over 2GB) floating point format widths could
cause an integer overflow in the underlying call to snprintf(),
resulting in an assertion.  Formatted floating point widths are now
limited to the range of int, the return value of snprintf().  L<[perl
#133913]|https://rt.perl.org/Ticket/Display.html?id=133913>

=item *

Parsing the following constructs within a sub-parse (such as with
C<"${code here}"> or C<s/.../code here/e>) has changed to match how
they're parsed normally:

=over

=item *

C<print $fh ...> no longer produces a syntax error.

=item *

Code like C<s/.../ ${time} /e> now properly produces an "Ambiguous use
of ${time} resolved to $time at ..." warning when warnings are enabled.

=item *

C<@x {"a"}> (with the space) in a sub-parse now properly produces a
"better written as" warning when warnings are enabled.

=item *

attributes can now be used in a sub-parse.

=back

L<[perl #133850]|https://rt.perl.org/Ticket/Display.html?id=133850>

=item *

Incomplete hex and binary literals like C<0x> and C<0b> are now
treated as if the C<x> or C<b> is part of the next token.  L<[perl
#134125]|https://rt.perl.org/Ticket/Display.html?id=134125>

=item *

A spurious C<)> in a subparse, such as in C<s/.../code here/e> or
C<"...${code here}">, no longer confuses the parser.

Previously a subparse was bracketed with generated C<(> and C<)>
tokens, so a spurious C<)> would close the construct without doing the
normal subparse clean up, confusing the parser and possible causing an
assertion failure.

Such constructs are now surrounded by artificial tokens that can't be
included in the source.  L<[perl #130585]|https://rt.perl.org/Ticket/Display.html?id=130585>

=item *

Reference assignment of a sub, such as C<\&foo = \&bar;>, silently did
nothing in the C<main::> package.  L<[perl #134072]|https://rt.perl.org/Ticket/Display.html?id=134072>

=item *

sv_gets() now recovers better if the target SV is modified by a signal
handler.  L<[perl #134035]|https://rt.perl.org/Ticket/Display.html?id=134035>

=item *

C<readline @foo> now evaluates C<@foo> in scalar context.  Previously
it would be evalauted in list context, and since readline() pops only
one argument from the stack, the stack could underflow, or be left
with unexpected values on the stack.  L<[perl #133989]|https://rt.perl.org/Ticket/Display.html?id=133989>

=back

=head1 Acknowledgements

Perl 5.31.1 represents approximately 4 weeks of development since Perl
5.31.0 and contains approximately 37,000 lines of changes across 500 files
from 20 authors.

Excluding auto-generated files, documentation and release tools, there were
approximately 19,000 lines of changes to 340 .pm, .t, .c and .h files.

Perl continues to flourish into its fourth decade thanks to a vibrant
community of users and developers. The following people are known to have
contributed the improvements that became Perl 5.31.1:

Alexandr Savca, Andreas König, Chris 'BinGOs' Williams, Dagfinn Ilmari
Mannsåker, Dominic Hargreaves, Graham Knop, Hugo van der Sanden, James E
Keenan, Jerome Duval, Karen Etheridge, Karl Williamson, Manuel Mausz,
Michael Haardt, Nicolas R., Pali, Richard Leach, Sawyer X, Steve Hay, Tony
Cook, Vickenty Fesunov.

The list above is almost certainly incomplete as it is automatically
generated from version control history. In particular, it does not include
the names of the (very much appreciated) contributors who reported issues to
the Perl bug tracker.

Many of the changes included in this version originated in the CPAN modules
included in Perl's core. We're grateful to the entire CPAN community for
helping Perl to flourish.

For a more complete list of all of Perl's historical contributors, please
see the F<AUTHORS> file in the Perl source distribution.

=head1 Reporting Bugs

If you find what you think is a bug, you might check the perl bug database
at L<https://rt.perl.org/>.  There may also be information at
L<http://www.perl.org/>, the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
for details of how to report the issue.

=head1 Give Thanks

If you wish to thank the Perl 5 Porters for the work we had done in Perl 5,
you can do so by running the C<perlthanks> program:

    perlthanks

This will send an email to the Perl 5 Porters list with your show of thanks.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut

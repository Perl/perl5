=encoding utf8

=head1 NAME

perldelta - what is new for perl v5.37.3

=head1 DESCRIPTION

This document describes differences between the 5.37.2 release and the 5.37.3
release.

If you are upgrading from an earlier release such as 5.37.1, first read
L<perl5372delta>, which describes differences between 5.37.1 and 5.37.2.


=head1 Core Enhancements

=head2 PERL_RAND_SEED

Added a new environment variable C<PERL_RAND_SEED> which can be used to
cause a perl program which uses C<rand> without using C<srand()>
explicitly or which uses C<srand()> with no arguments to be repeatable.
See L<perlrun>. This feature can be disabled at compile time by passing

    -Accflags=-DNO_PERL_RAND_SEED

to F<Configure> during the build process.



=head1 Performance Enhancements

=over 4

=item *

Additional optree optimizations for common OP patterns. For example, multiple
simple OPs replaced by a single streamlined OP, so as to be more efficient at
runtime. L<[GH #19943]|https://github.com/Perl/perl5/pull/19943>.

=back


=head1 Modules and Pragmata

XXX All changes to installed files in F<cpan/>, F<dist/>, F<ext/> and F<lib/>
go here.  If Module::CoreList is updated, generate an initial draft of the
following sections using F<Porting/corelist-perldelta.pl>.  A paragraph summary
for important changes should then be added by hand.  In an ideal world,
dual-life modules would have a F<Changes> file that could be cribbed.

The list of new and updated modules is modified automatically as part of
preparing a Perl release, so the only reason to manually add entries here is if
you're summarising the important changes in the module update. (Also, if the
manually-added details don't match the automatically-generated ones, the
release manager will have to investigate the situation carefully.)

[ Within each section, list entries as an =item entry ]

=head2 New Modules and Pragmata

=over 4

=item *

XXX Remove this section if not applicable.

=back

=head2 Updated Modules and Pragmata

=over 4

=item *

L<XXX> has been upgraded from version A.xx to B.yy.

If there was something important to note about this change, include that here.

=back

=head2 Removed Modules and Pragmata

=over 4

=item *

XXX

=back



=head1 Platform Support


=head2 Platform-Specific Notes

XXX List any changes for specific platforms.  This could include configuration
and compilation changes or changes in portability/compatibility.  However,
changes within modules for platforms should generally be listed in the
L</Modules and Pragmata> section.

=over 4

=item Windows

=over 4

=item *

In some cases, timestamps returned by L<stat()|perlfunc/stat> and
L<lstat()|perlfunc/lstat> failed to take daylight saving time into account.
[L<GH #20018|https://github.com/Perl/perl5/issues/20018>]
[L<GH #20061|https://github.com/Perl/perl5/issues/20061>]

=back

=back


=head1 Internal Changes

=over 4

=item *

The C<CVf_METHOD> CV flag and associated C<CvMETHOD> macro has been renamed to
C<CVf_NOWARN_AMBIGUOUS> and C<CvNOWARN_AMBIGUOUS>. This closer reflects its
actual behaviour (it suppresses a warning that would otherwise be generated
about ambiguous names), in order to be less confusing with a possible upcoming
feature.

=item *

The C<OPf_SPECIAL> flag is no longer set on the C<OP_ENTERSUB> op
constructed to call the C<VERSION>, C<import> and C<unimport> methods
as part of a C<use> statement and attribute application, nor when
assigning to an C<:lvalue> subroutine.

=item *

A new CV flag C<CVf_REFCOUNTED_ANYSV> has been added, which indicates that the
CV is an XSUB and stores an SV pointer in the C<CvXSUBANY.any_sv> union field.
Perl core operations such as cloning or destroying the CV will maintain the
reference count of the pointed-to SV, destroying it when required.

=back

=head1 Selected Bug Fixes

=over 4

=item * PerlIO::get_layers will now accept IO references too

Previously it would only take glob references or names of globs. Now it will
also accept IO references.

=back


=head1 Acknowledgements

XXX Generate this with:

  perl Porting/acknowledgements.pl v5.37.2..HEAD

=head1 Reporting Bugs

If you find what you think is a bug, you might check the perl bug database
at L<https://github.com/Perl/perl5/issues>.  There may also be information at
L<http://www.perl.org/>, the Perl Home Page.

If you believe you have an unreported bug, please open an issue at
L<https://github.com/Perl/perl5/issues>.  Be sure to trim your bug down to a
tiny but sufficient test case.

If the bug you are reporting has security implications which make it
inappropriate to send to a public issue tracker, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
for details of how to report the issue.

=head1 Give Thanks

If you wish to thank the Perl 5 Porters for the work we had done in Perl 5,
you can do so by running the C<perlthanks> program:

    perlthanks

This will send an email to the Perl 5 Porters list with your show of thanks.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut

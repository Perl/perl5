__END__
# NAME local %$ref on last line of lvalue sub in lv cx
   no strict; no warnings; sub foo :lvalue { local %{\%foo} }
   (foo) = 3;
EXPECT
Can't localize through a reference at - line 1.
########
# NAME local @$ref on last line of lvalue sub in lv cx
   no strict; no warnings; sub foo :lvalue { local @{\@foo} }
   (foo) = 3;
EXPECT
Can't localize through a reference at - line 1.
########
# NAME local %$ref on last line of lvalue sub in non-lv cx
   no strict; no warnings; sub foo :lvalue { local %{\%foo} }
   foo;
EXPECT
Can't localize through a reference at - line 1.
########
# NAME local @$ref on last line of lvalue sub in non-lv cx
   no strict; no warnings; sub foo :lvalue { local @{\@foo} }
   foo;
EXPECT
Can't localize through a reference at - line 1.
########
# NAME \local %$ref
   no strict; no warnings; \local %{\%hash}
EXPECT
Can't localize through a reference at - line 1.
########
# NAME \local @$ref
   no strict; no warnings; \local @{\@hash}
EXPECT
Can't localize through a reference at - line 1.
########
# NAME calling undef sub belonging to undef GV
   my $foosub = \&foo;
   undef *foo;
   &$foosub;
EXPECT
Undefined subroutine &main::foo called at - line 3.
########
# NAME calling undef sub resident in its GV
   my $foosub = \&foo;
   &$foosub;
EXPECT
Undefined subroutine &main::foo called at - line 2.
########
# NAME calling undef scalar
   &{+undef};
EXPECT
Can't use an undefined value as a subroutine reference at - line 1.
########
# NAME calling undef magical scalar
no strict; no warnings;
   sub TIESCALAR {bless[]}
   sub FETCH {}
   tie $tied, "";
   &$tied;
EXPECT
Can't use an undefined value as a subroutine reference at - line 5.
